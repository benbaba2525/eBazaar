{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styles = undefined;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _withStyles = require('../styles/withStyles');\n\nvar _withStyles2 = _interopRequireDefault(_withStyles);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar styles = exports.styles = {\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    overflowY: 'auto',\n    listStyle: 'none',\n    padding: 0,\n    WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.\n\n  }\n};\n\nfunction GridList(props) {\n  var cellHeight = props.cellHeight,\n      children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      cols = props.cols,\n      Component = props.component,\n      spacing = props.spacing,\n      style = props.style,\n      other = (0, _objectWithoutProperties3.default)(props, ['cellHeight', 'children', 'classes', 'className', 'cols', 'component', 'spacing', 'style']);\n  return _react2.default.createElement(Component, (0, _extends3.default)({\n    className: (0, _classnames2.default)(classes.root, classNameProp),\n    style: (0, _extends3.default)({\n      margin: -spacing / 2\n    }, style)\n  }, other), _react2.default.Children.map(children, function (currentChild) {\n    if (!_react2.default.isValidElement(currentChild)) {\n      return null;\n    }\n\n    var childCols = currentChild.props.cols || 1;\n    var childRows = currentChild.props.rows || 1;\n    return _react2.default.cloneElement(currentChild, {\n      style: (0, _extends3.default)({\n        width: 100 / cols * childCols + '%',\n        height: cellHeight === 'auto' ? 'auto' : cellHeight * childRows + spacing,\n        padding: spacing / 2\n      }, currentChild.props.style)\n    });\n  }));\n}\n\nGridList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Number of px for one cell height.\n   * You can set `'auto'` if you want to let the children determine the height.\n   */\n  cellHeight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.oneOf(['auto'])]),\n\n  /**\n   * Grid Tiles that will be in Grid List.\n   */\n  children: _propTypes2.default.node.isRequired,\n\n  /**\n   * Useful to extend the style applied to components.\n   */\n  classes: _propTypes2.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes2.default.string,\n\n  /**\n   * Number of columns.\n   */\n  cols: _propTypes2.default.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n\n  /**\n   * Number of px for the spacing between tiles.\n   */\n  spacing: _propTypes2.default.number,\n\n  /**\n   * @ignore\n   */\n  style: _propTypes2.default.object\n} : {};\nGridList.defaultProps = {\n  cellHeight: 180,\n  cols: 2,\n  component: 'ul',\n  spacing: 4\n};\nexports.default = (0, _withStyles2.default)(styles, {\n  name: 'MuiGridList'\n})(GridList);","map":null,"metadata":{},"sourceType":"script"}