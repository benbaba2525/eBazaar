{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styles = undefined;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _withStyles = require('../styles/withStyles');\n\nvar _withStyles2 = _interopRequireDefault(_withStyles);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar styles = exports.styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: theme.spacing.unit * 5,\n      height: theme.spacing.unit * 5,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE11.\n      objectFit: 'cover'\n    }\n  };\n};\n\nfunction Avatar(props) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      childrenClassNameProp = props.childrenClassName,\n      classes = props.classes,\n      classNameProp = props.className,\n      Component = props.component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      other = (0, _objectWithoutProperties3.default)(props, ['alt', 'children', 'childrenClassName', 'classes', 'className', 'component', 'imgProps', 'sizes', 'src', 'srcSet']);\n  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.colorDefault, childrenProp && !src && !srcSet), classNameProp);\n  var children = null;\n\n  if (childrenProp) {\n    if (childrenClassNameProp && typeof childrenProp !== 'string' && _react2.default.isValidElement(childrenProp)) {\n      var childrenClassName = (0, _classnames2.default)(childrenClassNameProp, childrenProp.props.className);\n      children = _react2.default.cloneElement(childrenProp, {\n        className: childrenClassName\n      });\n    } else {\n      children = childrenProp;\n    }\n  } else if (src || srcSet) {\n    children = _react2.default.createElement('img', (0, _extends3.default)({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  }\n\n  return _react2.default.createElement(Component, (0, _extends3.default)({\n    className: className\n  }, other), children);\n}\n\nAvatar.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: _propTypes2.default.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar.\n   * `src` and `alt` props will not be used and no `img` will\n   * be rendered by default.\n   *\n   * This can be an element, or just a string.\n   */\n  children: _propTypes2.default.node,\n\n  /**\n   * @ignore\n   * The className of the child element.\n   * Used by Chip and ListItemIcon to style the Avatar icon.\n   */\n  childrenClassName: _propTypes2.default.string,\n\n  /**\n   * Useful to extend the style applied to components.\n   */\n  classes: _propTypes2.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes2.default.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n\n  /**\n   * Properties applied to the `img` element when the component\n   * is used to display an image.\n   */\n  imgProps: _propTypes2.default.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: _propTypes2.default.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: _propTypes2.default.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   */\n  srcSet: _propTypes2.default.string\n} : {};\nAvatar.defaultProps = {\n  component: 'div'\n};\nexports.default = (0, _withStyles2.default)(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","map":null,"metadata":{},"sourceType":"script"}