{"ast":null,"code":"import queryString from 'query-string';\n\nconst create = (params, credentials, product) => {\n  return fetch('/api/products/by/' + params.shopId, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\nconst read = params => {\n  return fetch('/api/products/' + params.productId, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\nconst update = (params, credentials, product) => {\n  return fetch('/api/product/' + params.shopId + '/' + params.productId, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst remove = (params, credentials) => {\n  return fetch('/api/product/' + params.shopId + '/' + params.productId, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst listByShop = params => {\n  return fetch('/api/products/by/' + params.shopId, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst listLatest = () => {\n  return fetch('/api/products/latest', {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\nconst listRelated = params => {\n  return fetch('/api/products/related/' + params.productId, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\nconst listCategories = () => {\n  return fetch('/api/products/categories', {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\nconst list = params => {\n  const query = queryString.stringify(params);\n  return fetch('/api/products?' + query, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\nexport { create, read, update, remove, listByShop, listLatest, listRelated, listCategories, list };","map":{"version":3,"sources":["/Users/ben/Desktop/Class-HW/eBazaar/client/src/product/api-product.js"],"names":["queryString","create","params","credentials","product","fetch","shopId","method","headers","t","body","then","response","json","catch","err","console","log","read","productId","update","remove","listByShop","listLatest","listRelated","listCategories","list","query","stringify"],"mappings":"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","sourcesContent":["import queryString from 'query-string'\n\n\nconst create = (params, credentials, product) => {\n  return fetch('/api/products/by/' + params.shopId, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: product\n  })\n    .then((response) => {\n      return response.json()\n    }).catch((err) => console.log(err))\n}\n\nconst read = (params) => {\n  return fetch('/api/products/' + params.productId, {\n    method: 'GET'\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => console.log(err))\n}\n\nconst update = (params, credentials, product) => {\n  return fetch('/api/product/' + params.shopId + '/' + params.productId, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: product\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => {\n    console.log(err)\n  })\n}\n\nconst remove = (params, credentials) => {\n  return fetch('/api/product/' + params.shopId + '/' + params.productId, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    }\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => {\n    console.log(err)\n  })\n}\n\nconst listByShop = (params) => {\n  return fetch('/api/products/by/' + params.shopId, {\n    method: 'GET'\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => {\n    console.log(err)\n  })\n}\n\nconst listLatest = () => {\n  return fetch('/api/products/latest', {\n    method: 'GET',\n  }).then(response => {\n    return response.json()\n  }).catch((err) => console.log(err))\n}\n\nconst listRelated = (params) => {\n  return fetch('/api/products/related/' + params.productId, {\n    method: 'GET',\n  }).then(response => {\n    return response.json()\n  }).catch((err) => console.log(err))\n}\n\nconst listCategories = () => {\n  return fetch('/api/products/categories', {\n    method: 'GET',\n  }).then(response => {\n    return response.json()\n  }).catch((err) => console.log(err))\n}\n\nconst list = (params) => {\n  const query = queryString.stringify(params)\n  return fetch('/api/products?' + query, {\n    method: 'GET',\n  }).then(response => {\n    return response.json()\n  }).catch((err) => console.log(err))\n}\n\nexport {\n  create,\n  read,\n  update,\n  remove,\n  listByShop,\n  listLatest,\n  listRelated,\n  listCategories,\n  list\n}"]},"metadata":{},"sourceType":"module"}