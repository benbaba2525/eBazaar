{"ast":null,"code":"const create = (params, credentials, shop) => {\n  return fetch('/api/shops/by/' + params.userId, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: shop\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\nconst list = () => {\n  return fetch('/api/shops', {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\nconst listByOwner = (params, credentials) => {\n  return fetch('/api/shops/by/' + params.userId, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst read = (params, credentials) => {\n  return fetch('/api/shop/' + params.shopId, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\nconst update = (params, credentials, shop) => {\n  return fetch('/api/shops/' + params.shopId, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: shop\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst remove = (params, credentials) => {\n  return fetch('/api/shops/' + params.shopId, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nexport { create, list, listByOwner, read, update, remove };","map":{"version":3,"sources":["/Users/ben/Desktop/Class-HW/eBazaar/client/src/shop/api-shop.js"],"names":["create","params","credentials","shop","fetch","userId","method","headers","t","body","then","response","json","catch","err","console","log","list","listByOwner","read","shopId","update","remove"],"mappings":"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","sourcesContent":["const create = (params, credentials, shop) => {\n  return fetch('/api/shops/by/' + params.userId, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: shop\n  })\n    .then((response) => {\n      return response.json()\n    }).catch((err) => console.log(err))\n}\n\nconst list = () => {\n  return fetch('/api/shops', {\n    method: 'GET',\n  }).then(response => {\n    return response.json()\n  }).catch((err) => console.log(err))\n}\n\nconst listByOwner = (params, credentials) => {\n  return fetch('/api/shops/by/' + params.userId, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    }\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => {\n    console.log(err)\n  })\n}\n\nconst read = (params, credentials) => {\n  return fetch('/api/shop/' + params.shopId, {\n    method: 'GET'\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => console.log(err))\n}\n\nconst update = (params, credentials, shop) => {\n  return fetch('/api/shops/' + params.shopId, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: shop\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => {\n    console.log(err)\n  })\n}\n\nconst remove = (params, credentials) => {\n  return fetch('/api/shops/' + params.shopId, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    }\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => {\n    console.log(err)\n  })\n}\n\nexport {\n  create,\n  list,\n  listByOwner,\n  read,\n  update,\n  remove\n}"]},"metadata":{},"sourceType":"module"}