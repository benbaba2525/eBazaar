{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Desktop/Class-HW/eBazaar/client/src/product/Products.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport Typography from 'material-ui/Typography';\nimport GridList, { GridListTile, GridListTileBar } from 'material-ui/GridList';\nimport { Link } from 'react-router-dom';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    background: theme.palette.background.paper,\n    textAlign: 'left',\n    padding: '0 8px'\n  },\n  container: {\n    minWidth: '100%',\n    paddingBottom: '14px'\n  },\n  gridList: {\n    width: '100%',\n    minHeight: 200,\n    padding: '16px 0 10px'\n  },\n  title: {\n    padding: \"\".concat(theme.spacing.unit * 3, \"px \").concat(theme.spacing.unit * 2.5, \"px \").concat(theme.spacing.unit * 2, \"px\"),\n    color: theme.palette.openTitle,\n    width: '100%'\n  },\n  tile: {\n    textAlign: 'center'\n  },\n  image: {\n    height: '100%'\n  },\n  tileBar: {\n    backgroundColor: 'rgba(0, 0, 0, 0.72)',\n    textAlign: 'left'\n  },\n  tileTitle: {\n    fontSize: '1.1em',\n    marginBottom: '5px',\n    color: 'rgb(189, 222, 219)',\n    display: 'block'\n  }\n});\n\nclass Products extends Component {\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.products.length > 0 ? React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      cellHeight: 200,\n      className: classes.gridList,\n      cols: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.products.map((product, i) => React.createElement(GridListTile, {\n      key: i,\n      className: classes.tile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Link, {\n      style: {\n        textDecoration: 'none'\n      },\n      to: \"/product/\" + product._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: classes.image,\n      src: '/api/product/image/' + product._id,\n      alt: product.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(GridListTileBar, {\n      className: classes.tileBar,\n      title: React.createElement(Link, {\n        style: {\n          textDecoration: 'none'\n        },\n        to: \"/product/\" + product._id,\n        className: classes.tileTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, product.name),\n      subtitle: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"$ \", product.price),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))))) : this.props.searched && React.createElement(Typography, {\n      type: \"subheading\",\n      component: \"h4\",\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"No products found! :(\"));\n  }\n\n}\n\nProducts.propTypes = {\n  classes: PropTypes.object.isRequired,\n  products: PropTypes.array.isRequired,\n  searched: PropTypes.bool.isRequired\n};\nexport default withStyles(styles)(Products);","map":{"version":3,"sources":["/Users/ben/Desktop/Class-HW/eBazaar/client/src/product/Products.js"],"names":["React","Component","PropTypes","withStyles","Typography","GridList","GridListTile","GridListTileBar","Link","styles","theme","root","display","flexWrap","justifyContent","overflow","background","palette","paper","textAlign","padding","container","minWidth","paddingBottom","gridList","width","minHeight","title","spacing","unit","color","openTitle","tile","image","height","tileBar","backgroundColor","tileTitle","fontSize","marginBottom","Products","render","classes","props","products","length","map","product","i","textDecoration","_id","name","price","searched","propTypes","object","isRequired","array","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,QAAP,IAAmBC,YAAnB,EAAiCC,eAAjC,QAAwD,sBAAxD;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,cAAc,EAAE,cAHZ;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,UAAU,EAAEN,KAAK,CAACO,OAAN,CAAcD,UAAd,CAAyBE,KALjC;AAMJC,IAAAA,SAAS,EAAE,MANP;AAOJC,IAAAA,OAAO,EAAE;AAPL,GADiB;AAUvBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,MADD;AAETC,IAAAA,aAAa,EAAE;AAFN,GAVY;AAcvBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,MADC;AAERC,IAAAA,SAAS,EAAE,GAFH;AAGRN,IAAAA,OAAO,EAAE;AAHD,GAda;AAmBvBO,EAAAA,KAAK,EAAE;AACLP,IAAAA,OAAO,YAAKV,KAAK,CAACkB,OAAN,CAAcC,IAAd,GAAqB,CAA1B,gBAAiCnB,KAAK,CAACkB,OAAN,CAAcC,IAAd,GAAqB,GAAtD,gBAA+DnB,KAAK,CAACkB,OAAN,CAAcC,IAAd,GAAqB,CAApF,OADF;AAELC,IAAAA,KAAK,EAAEpB,KAAK,CAACO,OAAN,CAAcc,SAFhB;AAGLN,IAAAA,KAAK,EAAE;AAHF,GAnBgB;AAwBvBO,EAAAA,IAAI,EAAE;AACJb,IAAAA,SAAS,EAAE;AADP,GAxBiB;AA2BvBc,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH,GA3BgB;AA8BvBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAE,qBADV;AAEPjB,IAAAA,SAAS,EAAE;AAFJ,GA9Bc;AAkCvBkB,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,OADD;AAETC,IAAAA,YAAY,EAAE,KAFL;AAGTT,IAAAA,KAAK,EAAE,oBAHE;AAITlB,IAAAA,OAAO,EAAE;AAJA;AAlCY,CAAL,CAApB;;AAyCA,MAAM4B,QAAN,SAAuBvC,SAAvB,CAAiC;AAC/BwC,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAEA,OAAO,CAAC/B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKgC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,GAA6B,CAA7B,GACE;AAAK,MAAA,SAAS,EAAEH,OAAO,CAACrB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAE,GAAtB;AAA2B,MAAA,SAAS,EAAEqB,OAAO,CAAClB,QAA9C;AAAwD,MAAA,IAAI,EAAE,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKmB,KAAL,CAAWC,QAAX,CAAoBE,GAApB,CAAwB,CAACC,OAAD,EAAUC,CAAV,KACvB,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,CAAnB;AAAsB,MAAA,SAAS,EAAEN,OAAO,CAACV,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEiB,QAAAA,cAAc,EAAE;AAAlB,OAAb;AAAyC,MAAA,EAAE,EAAE,cAAcF,OAAO,CAACG,GAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwE;AAAK,MAAA,SAAS,EAAER,OAAO,CAACT,KAAxB;AAA+B,MAAA,GAAG,EAAE,wBAAwBc,OAAO,CAACG,GAApE;AAAyE,MAAA,GAAG,EAAEH,OAAO,CAACI,IAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxE,CADF,EAEE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAET,OAAO,CAACP,OAApC;AACE,MAAA,KAAK,EAAE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEc,UAAAA,cAAc,EAAE;AAAlB,SAAb;AAAyC,QAAA,EAAE,EAAE,cAAcF,OAAO,CAACG,GAAnE;AAAwE,QAAA,SAAS,EAAER,OAAO,CAACL,SAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuGU,OAAO,CAACI,IAA/G,CADT;AAEE,MAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAASJ,OAAO,CAACK,KAAjB,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD,CADH,CADD,CADF,GAYwB,KAAKT,KAAL,CAAWU,QAAX,IAAwB,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,YAAjB;AAA8B,MAAA,SAAS,EAAC,IAAxC;AAA6C,MAAA,SAAS,EAAEX,OAAO,CAACf,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAbnD,CADF;AAgBD;;AAnB8B;;AAqBjCa,QAAQ,CAACc,SAAT,GAAqB;AACnBZ,EAAAA,OAAO,EAAExC,SAAS,CAACqD,MAAV,CAAiBC,UADP;AAEnBZ,EAAAA,QAAQ,EAAE1C,SAAS,CAACuD,KAAV,CAAgBD,UAFP;AAGnBH,EAAAA,QAAQ,EAAEnD,SAAS,CAACwD,IAAV,CAAeF;AAHN,CAArB;AAMA,eAAerD,UAAU,CAACM,MAAD,CAAV,CAAmB+B,QAAnB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from 'material-ui/styles'\nimport Typography from 'material-ui/Typography'\nimport GridList, { GridListTile, GridListTileBar } from 'material-ui/GridList'\nimport { Link } from 'react-router-dom'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    background: theme.palette.background.paper,\n    textAlign: 'left',\n    padding: '0 8px'\n  },\n  container: {\n    minWidth: '100%',\n    paddingBottom: '14px'\n  },\n  gridList: {\n    width: '100%',\n    minHeight: 200,\n    padding: '16px 0 10px'\n  },\n  title: {\n    padding: `${theme.spacing.unit * 3}px ${theme.spacing.unit * 2.5}px ${theme.spacing.unit * 2}px`,\n    color: theme.palette.openTitle,\n    width: '100%'\n  },\n  tile: {\n    textAlign: 'center'\n  },\n  image: {\n    height: '100%'\n  },\n  tileBar: {\n    backgroundColor: 'rgba(0, 0, 0, 0.72)',\n    textAlign: 'left'\n  },\n  tileTitle: {\n    fontSize: '1.1em',\n    marginBottom: '5px',\n    color: 'rgb(189, 222, 219)',\n    display: 'block'\n  }\n})\nclass Products extends Component {\n  render() {\n    const { classes } = this.props\n    return (\n      <div className={classes.root}>\n        {this.props.products.length > 0 ?\n          (<div className={classes.container}>\n            <GridList cellHeight={200} className={classes.gridList} cols={3}>\n              {this.props.products.map((product, i) => (\n                <GridListTile key={i} className={classes.tile}>\n                  <Link style={{ textDecoration: 'none' }} to={\"/product/\" + product._id}><img className={classes.image} src={'/api/product/image/' + product._id} alt={product.name} /></Link>\n                  <GridListTileBar className={classes.tileBar}\n                    title={<Link style={{ textDecoration: 'none' }} to={\"/product/\" + product._id} className={classes.tileTitle}>{product.name}</Link>}\n                    subtitle={<span>$ {product.price}</span>}\n                  />\n                </GridListTile>\n              ))}\n            </GridList></div>) : this.props.searched && (<Typography type=\"subheading\" component=\"h4\" className={classes.title}>No products found! :(</Typography>)}\n      </div>)\n  }\n}\nProducts.propTypes = {\n  classes: PropTypes.object.isRequired,\n  products: PropTypes.array.isRequired,\n  searched: PropTypes.bool.isRequired\n}\n\nexport default withStyles(styles)(Products)"]},"metadata":{},"sourceType":"module"}