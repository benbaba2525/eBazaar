{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Desktop/Class-HW/eBazaar/client/src/product/Categories.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport Card from 'material-ui/Card';\nimport Typography from 'material-ui/Typography';\nimport Divider from 'material-ui/Divider';\nimport GridList, { GridListTile } from 'material-ui/GridList';\nimport Icon from 'material-ui/Icon';\nimport { list } from './api-product.js';\nimport Products from './Products';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    background: theme.palette.background.paper\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    width: '100%',\n    transform: 'translateZ(0)'\n  },\n  tileTitle: {\n    verticalAlign: 'middle',\n    lineHeight: 2.5,\n    textAlign: 'center',\n    fontSize: '1.5em',\n    margin: '0 4px 0 0'\n  },\n  card: {\n    margin: 'auto',\n    marginTop: 20\n  },\n  title: {\n    padding: \"\".concat(theme.spacing.unit * 3, \"px \").concat(theme.spacing.unit * 2.5, \"px \").concat(theme.spacing.unit * 2, \"px\"),\n    color: theme.palette.openTitle,\n    backgroundColor: '#80808024',\n    fontSize: '1.1em'\n  },\n  icon: {\n    verticalAlign: 'sub',\n    color: '#738272',\n    fontSize: '0.9em'\n  },\n  link: {\n    color: '#4d6538',\n    textShadow: '0px 2px 12px #ffffff',\n    cursor: 'pointer'\n  }\n});\n\nclass Categories extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      selected: ''\n    };\n\n    this.componentWillReceiveProps = props => {\n      this.setState({\n        selected: props.categories[0]\n      });\n      list({\n        category: props.categories[0]\n      }).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          this.setState({\n            products: data\n          });\n        }\n      });\n    };\n\n    this.listbyCategory = category => event => {\n      this.setState({\n        selected: category\n      });\n      list({\n        category: category\n      }).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          this.setState({\n            products: data\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      type: \"title\",\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Explore by category\"), React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      className: classes.gridList,\n      cols: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.props.categories.map((tile, i) => React.createElement(GridListTile, {\n      key: i,\n      className: classes.tileTitle,\n      style: {\n        height: '64px',\n        backgroundColor: this.state.selected === tile ? 'rgba(95, 139, 137, 0.56)' : 'rgba(95, 124, 139, 0.32)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: classes.link,\n      onClick: this.listbyCategory(tile),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, tile, \"  \", React.createElement(Icon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.selected === tile && 'arrow_drop_down')))))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Products, {\n      products: this.state.products,\n      searched: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })));\n  }\n\n}\n\nCategories.propTypes = {\n  classes: PropTypes.object.isRequired,\n  categories: PropTypes.array.isRequired\n};\nexport default withStyles(styles)(Categories);","map":{"version":3,"sources":["/Users/ben/Desktop/Class-HW/eBazaar/client/src/product/Categories.js"],"names":["React","Component","PropTypes","withStyles","Card","Typography","Divider","GridList","GridListTile","Icon","list","Products","styles","theme","root","display","flexWrap","justifyContent","overflow","background","palette","paper","gridList","width","transform","tileTitle","verticalAlign","lineHeight","textAlign","fontSize","margin","card","marginTop","title","padding","spacing","unit","color","openTitle","backgroundColor","icon","link","textShadow","cursor","Categories","state","products","selected","componentWillReceiveProps","props","setState","categories","category","then","data","error","console","log","listbyCategory","event","render","classes","map","tile","i","height","propTypes","object","isRequired","array"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,IAAmBC,YAAnB,QAAuC,sBAAvC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,cAAc,EAAE,cAHZ;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,UAAU,EAAEN,KAAK,CAACO,OAAN,CAAcD,UAAd,CAAyBE;AALjC,GADiB;AAQvBC,EAAAA,QAAQ,EAAE;AACRN,IAAAA,QAAQ,EAAE,QADF;AAERO,IAAAA,KAAK,EAAE,MAFC;AAGRC,IAAAA,SAAS,EAAE;AAHH,GARa;AAavBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,aAAa,EAAE,QADN;AAETC,IAAAA,UAAU,EAAE,GAFH;AAGTC,IAAAA,SAAS,EAAE,QAHF;AAITC,IAAAA,QAAQ,EAAE,OAJD;AAKTC,IAAAA,MAAM,EAAE;AALC,GAbY;AAoBvBC,EAAAA,IAAI,EAAE;AACJD,IAAAA,MAAM,EAAE,MADJ;AAEJE,IAAAA,SAAS,EAAE;AAFP,GApBiB;AAwBvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,YAAKrB,KAAK,CAACsB,OAAN,CAAcC,IAAd,GAAqB,CAA1B,gBAAiCvB,KAAK,CAACsB,OAAN,CAAcC,IAAd,GAAqB,GAAtD,gBAA+DvB,KAAK,CAACsB,OAAN,CAAcC,IAAd,GAAqB,CAApF,OADF;AAELC,IAAAA,KAAK,EAAExB,KAAK,CAACO,OAAN,CAAckB,SAFhB;AAGLC,IAAAA,eAAe,EAAE,WAHZ;AAILV,IAAAA,QAAQ,EAAE;AAJL,GAxBgB;AA8BvBW,EAAAA,IAAI,EAAE;AACJd,IAAAA,aAAa,EAAE,KADX;AAEJW,IAAAA,KAAK,EAAE,SAFH;AAGJR,IAAAA,QAAQ,EAAE;AAHN,GA9BiB;AAmCvBY,EAAAA,IAAI,EAAE;AACJJ,IAAAA,KAAK,EAAE,SADH;AAEJK,IAAAA,UAAU,EAAE,sBAFR;AAGJC,IAAAA,MAAM,EAAE;AAHJ;AAnCiB,CAAL,CAApB;;AA0CA,MAAMC,UAAN,SAAyB3C,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjC4C,KADiC,GACzB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADyB;;AAAA,SAKjCC,yBALiC,GAKJC,KAAD,IAAW;AACrC,WAAKC,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAEE,KAAK,CAACE,UAAN,CAAiB,CAAjB;AAAZ,OAAd;AACAzC,MAAAA,IAAI,CAAC;AACH0C,QAAAA,QAAQ,EAAEH,KAAK,CAACE,UAAN,CAAiB,CAAjB;AADP,OAAD,CAAJ,CAEGE,IAFH,CAESC,IAAD,IAAU;AAChB,YAAIA,IAAI,CAACC,KAAT,EAAgB;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACD,SAFD,MAEO;AACL,eAAKL,QAAL,CAAc;AAAEJ,YAAAA,QAAQ,EAAEQ;AAAZ,WAAd;AACD;AACF,OARD;AASD,KAhBgC;;AAAA,SAkBjCI,cAlBiC,GAkBhBN,QAAQ,IAAIO,KAAK,IAAI;AACpC,WAAKT,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAEK;AAAZ,OAAd;AACA1C,MAAAA,IAAI,CAAC;AACH0C,QAAAA,QAAQ,EAAEA;AADP,OAAD,CAAJ,CAEGC,IAFH,CAESC,IAAD,IAAU;AAChB,YAAIA,IAAI,CAACC,KAAT,EAAgB;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACD,SAFD,MAEO;AACL,eAAKL,QAAL,CAAc;AAAEJ,YAAAA,QAAQ,EAAEQ;AAAZ,WAAd;AACD;AACF,OARD;AASD,KA7BgC;AAAA;;AA+BjCM,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKZ,KADlB,CACCY,OADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEA,OAAO,CAAC9B,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,OAAjB;AAAyB,MAAA,SAAS,EAAE8B,OAAO,CAAC5B,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAIE;AAAK,MAAA,SAAS,EAAE4B,OAAO,CAAC/C,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAE+C,OAAO,CAACvC,QAA7B;AAAuC,MAAA,IAAI,EAAE,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK2B,KAAL,CAAWE,UAAX,CAAsBW,GAAtB,CAA0B,CAACC,IAAD,EAAOC,CAAP,KACzB,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,CAAnB;AAAsB,MAAA,SAAS,EAAEH,OAAO,CAACpC,SAAzC;AAAoD,MAAA,KAAK,EAAE;AAAEwC,QAAAA,MAAM,EAAE,MAAV;AAAkB1B,QAAAA,eAAe,EAAE,KAAKM,KAAL,CAAWE,QAAX,KAAwBgB,IAAxB,GAA+B,0BAA/B,GAA4D;AAA/F,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAEF,OAAO,CAACpB,IAAzB;AAA+B,MAAA,OAAO,EAAE,KAAKiB,cAAL,CAAoBK,IAApB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoEA,IAApE,QAA2E,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEF,OAAO,CAACrB,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKK,KAAL,CAAWE,QAAX,KAAwBgB,IAAxB,IAAgC,iBAAhE,CAA3E,CADF,CADD,CADH,CADF,CAJF,EAaE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAcE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWC,QAA/B;AAAyC,MAAA,QAAQ,EAAE,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CADF,CADF;AAoBD;;AArDgC;;AAuDnCF,UAAU,CAACsB,SAAX,GAAuB;AACrBL,EAAAA,OAAO,EAAE3D,SAAS,CAACiE,MAAV,CAAiBC,UADL;AAErBjB,EAAAA,UAAU,EAAEjD,SAAS,CAACmE,KAAV,CAAgBD;AAFP,CAAvB;AAKA,eAAejE,UAAU,CAACS,MAAD,CAAV,CAAmBgC,UAAnB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from 'material-ui/styles'\nimport Card from 'material-ui/Card'\nimport Typography from 'material-ui/Typography'\nimport Divider from 'material-ui/Divider'\nimport GridList, { GridListTile } from 'material-ui/GridList'\nimport Icon from 'material-ui/Icon'\nimport { list } from './api-product.js'\nimport Products from './Products'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    background: theme.palette.background.paper,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    width: '100%',\n    transform: 'translateZ(0)',\n  },\n  tileTitle: {\n    verticalAlign: 'middle',\n    lineHeight: 2.5,\n    textAlign: 'center',\n    fontSize: '1.5em',\n    margin: '0 4px 0 0',\n  },\n  card: {\n    margin: 'auto',\n    marginTop: 20\n  },\n  title: {\n    padding: `${theme.spacing.unit * 3}px ${theme.spacing.unit * 2.5}px ${theme.spacing.unit * 2}px`,\n    color: theme.palette.openTitle,\n    backgroundColor: '#80808024',\n    fontSize: '1.1em'\n  },\n  icon: {\n    verticalAlign: 'sub',\n    color: '#738272',\n    fontSize: '0.9em'\n  },\n  link: {\n    color: '#4d6538',\n    textShadow: '0px 2px 12px #ffffff',\n    cursor: 'pointer'\n  }\n})\n\nclass Categories extends Component {\n  state = {\n    products: [],\n    selected: ''\n  }\n  componentWillReceiveProps = (props) => {\n    this.setState({ selected: props.categories[0] })\n    list({\n      category: props.categories[0]\n    }).then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        this.setState({ products: data })\n      }\n    })\n  }\n\n  listbyCategory = category => event => {\n    this.setState({ selected: category })\n    list({\n      category: category\n    }).then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        this.setState({ products: data })\n      }\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <div>\n        <Card className={classes.card}>\n          <Typography type=\"title\" className={classes.title}>\n            Explore by category\n          </Typography>\n          <div className={classes.root}>\n            <GridList className={classes.gridList} cols={4}>\n              {this.props.categories.map((tile, i) => (\n                <GridListTile key={i} className={classes.tileTitle} style={{ height: '64px', backgroundColor: this.state.selected === tile ? 'rgba(95, 139, 137, 0.56)' : 'rgba(95, 124, 139, 0.32)' }}>\n                  <span className={classes.link} onClick={this.listbyCategory(tile)}>{tile}  <Icon className={classes.icon}>{this.state.selected === tile && 'arrow_drop_down'}</Icon></span>\n                </GridListTile>\n              ))}\n            </GridList>\n          </div>\n          <Divider />\n          <Products products={this.state.products} searched={false} />\n        </Card>\n      </div>\n    )\n  }\n}\nCategories.propTypes = {\n  classes: PropTypes.object.isRequired,\n  categories: PropTypes.array.isRequired\n}\n\nexport default withStyles(styles)(Categories)"]},"metadata":{},"sourceType":"module"}