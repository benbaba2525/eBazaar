{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styles = undefined;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _withStyles = require('../styles/withStyles');\n\nvar _withStyles2 = _interopRequireDefault(_withStyles);\n\nvar _colorManipulator = require('../styles/colorManipulator');\n\nvar _ButtonBase = require('../ButtonBase');\n\nvar _ButtonBase2 = _interopRequireDefault(_ButtonBase);\n\nvar _helpers = require('../utils/helpers');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar styles = exports.styles = function styles(theme) {\n  return {\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      width: 48,\n      height: 48,\n      padding: 0,\n      borderRadius: '50%',\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: (0, _colorManipulator.fade)(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n    colorInherit: {\n      color: 'inherit'\n    },\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: (0, _colorManipulator.fade)(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: (0, _colorManipulator.fade)(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    disabled: {},\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\n * Refer to the [Icons](/style/icons) section of the documentation\n * regarding the available icon options.\n */\n// @inheritedComponent ButtonBase\n\n\nfunction IconButton(props) {\n  var _classNames;\n\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      disabled = props.disabled,\n      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'color', 'disabled']);\n  return _react2.default.createElement(_ButtonBase2.default, (0, _extends3.default)({\n    className: (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes['color' + (0, _helpers.capitalize)(color)], color !== 'default'), (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), _classNames), className),\n    centerRipple: true,\n    focusRipple: true,\n    disabled: disabled\n  }, other), _react2.default.createElement('span', {\n    className: classes.label\n  }, children));\n}\n\nIconButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * The icon element.\n   */\n  children: _propTypes2.default.node,\n\n  /**\n   * Useful to extend the style applied to components.\n   */\n  classes: _propTypes2.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes2.default.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: _propTypes2.default.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: _propTypes2.default.bool,\n\n  /**\n   * If `true`, the ripple will be disabled.\n   */\n  disableRipple: _propTypes2.default.bool\n} : {};\nIconButton.defaultProps = {\n  color: 'default',\n  disabled: false\n};\nexports.default = (0, _withStyles2.default)(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","map":null,"metadata":{},"sourceType":"script"}