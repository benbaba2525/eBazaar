{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @ignore - internal component.\n *\n * Internal helper component to allow attaching a ref to a\n * child element that may not accept refs (functional component).\n * It's higly inspired by https://github.com/facebook/react/issues/11401#issuecomment-340543801\n */\n\n\nvar RootRef = function (_React$Component) {\n  (0, _inherits3.default)(RootRef, _React$Component);\n\n  function RootRef() {\n    (0, _classCallCheck3.default)(this, RootRef);\n    return (0, _possibleConstructorReturn3.default)(this, (RootRef.__proto__ || (0, _getPrototypeOf2.default)(RootRef)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(RootRef, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.props.rootRef(_reactDom2.default.findDOMNode(this));\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.props.rootRef(null);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n  return RootRef;\n}(_react2.default.Component);\n\nRootRef.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: _propTypes2.default.element.isRequired,\n  rootRef: _propTypes2.default.func.isRequired\n} : {};\nexports.default = RootRef;","map":null,"metadata":{},"sourceType":"script"}