{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Desktop/Class-HW/eBazaar/client/src/user/EditProfile.js\";\nimport React, { Component } from 'react';\nimport Card, { CardActions, CardContent } from 'material-ui/Card';\nimport Button from 'material-ui/Button';\nimport TextField from 'material-ui/TextField';\nimport Typography from 'material-ui/Typography';\nimport Icon from 'material-ui/Icon';\nimport { FormControlLabel } from 'material-ui/Form';\nimport Switch from 'material-ui/Switch';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport auth from './../auth/auth-helper';\nimport { read, update } from './api-user.js';\nimport { Redirect } from 'react-router-dom';\n\nconst styles = theme => ({\n  card: {\n    maxWidth: 600,\n    margin: 'auto',\n    textAlign: 'center',\n    marginTop: theme.spacing.unit * 5,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  title: {\n    margin: theme.spacing.unit * 2,\n    color: theme.palette.protectedTitle\n  },\n  error: {\n    verticalAlign: 'middle'\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n  submit: {\n    margin: 'auto',\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nclass EditProfile extends Component {\n  constructor({\n    match\n  }) {\n    super();\n\n    this.componentDidMount = () => {\n      const jwt = auth.isAuthenticated();\n      read({\n        userId: this.match.params.userId\n      }, {\n        t: jwt.token\n      }).then(data => {\n        if (data.error) {\n          this.setState({\n            error: data.error\n          });\n        } else {\n          this.setState({\n            name: data.name,\n            email: data.email,\n            seller: data.seller\n          });\n        }\n      });\n    };\n\n    this.handleCheck = (event, checked) => {\n      this.setState({\n        'seller': checked\n      });\n    };\n\n    this.clickSubmit = () => {\n      const jwt = auth.isAuthenticated();\n      const user = {\n        name: this.state.name || undefined,\n        email: this.state.email || undefined,\n        password: this.state.password || undefined,\n        seller: this.state.seller\n      };\n      update({\n        userId: this.match.params.userId\n      }, {\n        t: jwt.token\n      }, user).then(data => {\n        if (data.error) {\n          this.setState({\n            error: data.error\n          });\n        } else {\n          auth.updateUser(data, () => {\n            this.setState({\n              'userId': data._id,\n              'redirectToProfile': true\n            });\n          });\n        }\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      seller: false,\n      redirectToProfile: false,\n      error: ''\n    };\n    this.match = match;\n  }\n\n  render() {\n    const classes = this.props.classes;\n\n    if (this.state.redirectToProfile) {\n      return React.createElement(Redirect, {\n        to: '/user/' + this.state.userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      type: \"headline\",\n      component: \"h2\",\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Edit Profile\"), React.createElement(TextField, {\n      id: \"name\",\n      label: \"Name\",\n      className: classes.textField,\n      value: this.state.name,\n      onChange: this.handleChange('name'),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.email,\n      onChange: this.handleChange('email'),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      className: classes.textField,\n      value: this.state.password,\n      onChange: this.handleChange('password'),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      type: \"subheading\",\n      component: \"h4\",\n      className: classes.subheading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Seller Account\"), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        classes: {\n          checked: classes.checked,\n          bar: classes.bar\n        },\n        checked: this.state.seller,\n        onChange: this.handleCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }),\n      label: this.state.seller ? 'Active' : 'Inactive',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), \" \", this.state.error && React.createElement(Typography, {\n      component: \"p\",\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      color: \"error\",\n      className: classes.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"error\"), this.state.error)), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      variant: \"raised\",\n      onClick: this.clickSubmit,\n      className: classes.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nEditProfile.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(EditProfile);","map":{"version":3,"sources":["/Users/ben/Desktop/Class-HW/eBazaar/client/src/user/EditProfile.js"],"names":["React","Component","Card","CardActions","CardContent","Button","TextField","Typography","Icon","FormControlLabel","Switch","PropTypes","withStyles","auth","read","update","Redirect","styles","theme","card","maxWidth","margin","textAlign","marginTop","spacing","unit","paddingBottom","title","color","palette","protectedTitle","error","verticalAlign","textField","marginLeft","marginRight","width","submit","marginBottom","EditProfile","constructor","match","componentDidMount","jwt","isAuthenticated","userId","params","t","token","then","data","setState","name","email","seller","handleCheck","event","checked","clickSubmit","user","state","undefined","password","updateUser","_id","handleChange","target","value","redirectToProfile","render","classes","props","subheading","bar","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Card, { CardActions, CardContent } from 'material-ui/Card'\nimport Button from 'material-ui/Button'\nimport TextField from 'material-ui/TextField'\nimport Typography from 'material-ui/Typography'\nimport Icon from 'material-ui/Icon'\nimport { FormControlLabel } from 'material-ui/Form'\nimport Switch from 'material-ui/Switch'\nimport PropTypes from 'prop-types'\nimport { withStyles } from 'material-ui/styles'\nimport auth from './../auth/auth-helper'\nimport { read, update } from './api-user.js'\nimport { Redirect } from 'react-router-dom'\n\nconst styles = theme => ({\n  card: {\n    maxWidth: 600,\n    margin: 'auto',\n    textAlign: 'center',\n    marginTop: theme.spacing.unit * 5,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  title: {\n    margin: theme.spacing.unit * 2,\n    color: theme.palette.protectedTitle\n  },\n  error: {\n    verticalAlign: 'middle'\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n  submit: {\n    margin: 'auto',\n    marginBottom: theme.spacing.unit * 2\n  }\n})\n\nclass EditProfile extends Component {\n  constructor({ match }) {\n    super()\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      seller: false,\n      redirectToProfile: false,\n      error: ''\n    }\n    this.match = match\n  }\n\n  componentDidMount = () => {\n    const jwt = auth.isAuthenticated()\n    read({\n      userId: this.match.params.userId\n    }, { t: jwt.token }).then((data) => {\n      if (data.error) {\n        this.setState({ error: data.error })\n      } else {\n        this.setState({ name: data.name, email: data.email, seller: data.seller })\n      }\n    })\n  }\n  handleCheck = (event, checked) => {\n    this.setState({ 'seller': checked })\n  }\n  clickSubmit = () => {\n    const jwt = auth.isAuthenticated()\n    const user = {\n      name: this.state.name || undefined,\n      email: this.state.email || undefined,\n      password: this.state.password || undefined,\n      seller: this.state.seller\n    }\n    update({\n      userId: this.match.params.userId\n    }, {\n        t: jwt.token\n      }, user).then((data) => {\n        if (data.error) {\n          this.setState({ error: data.error })\n        } else {\n          auth.updateUser(data, () => {\n            this.setState({ 'userId': data._id, 'redirectToProfile': true })\n          })\n        }\n      })\n  }\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value })\n  }\n  render() {\n    const { classes } = this.props\n    if (this.state.redirectToProfile) {\n      return (<Redirect to={'/user/' + this.state.userId} />)\n    }\n    return (\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography type=\"headline\" component=\"h2\" className={classes.title}>\n            Edit Profile\n          </Typography>\n          <TextField id=\"name\" label=\"Name\" className={classes.textField} value={this.state.name} onChange={this.handleChange('name')} margin=\"normal\" /><br />\n          <TextField id=\"email\" type=\"email\" label=\"Email\" className={classes.textField} value={this.state.email} onChange={this.handleChange('email')} margin=\"normal\" /><br />\n          <TextField id=\"password\" type=\"password\" label=\"Password\" className={classes.textField} value={this.state.password} onChange={this.handleChange('password')} margin=\"normal\" />\n          <Typography type=\"subheading\" component=\"h4\" className={classes.subheading}>\n            Seller Account\n          </Typography>\n          <FormControlLabel\n            control={\n              <Switch classes={{\n                checked: classes.checked,\n                bar: classes.bar,\n              }}\n                checked={this.state.seller}\n                onChange={this.handleCheck}\n              />}\n            label={this.state.seller ? 'Active' : 'Inactive'}\n          />\n          <br /> {\n            this.state.error && (<Typography component=\"p\" color=\"error\">\n              <Icon color=\"error\" className={classes.error}>error</Icon>\n              {this.state.error}\n            </Typography>)\n          }\n        </CardContent>\n        <CardActions>\n          <Button color=\"primary\" variant=\"raised\" onClick={this.clickSubmit} className={classes.submit}>Submit</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n}\n\nEditProfile.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(EditProfile)"]},"metadata":{},"sourceType":"module"}